<%
   if params[:project_id]
     project_id = params[:project_id].split(',')
     issue_projects = ( project_id.present? ? Project.find(project_id) : [] )
   else
     issue_projects = @issue.projects
   end
   issue_projects = issue_projects | [@issue.project]
   allowed_projects =  @issue.allowed_target_projects - [@issue.project] & @issue.project.descendants

   custom_fields = CustomField.select("id, name")
   custom_values = custom_values_by_projects(allowed_projects, custom_fields)
   options_for_selects = {}
   custom_fields.each do |field|
     options_for_selects.merge!(field.name.parameterize => []) # parameterize -> reemplaza el nombre completo por parámetros separados por guión, para adaptarlo mejor a una URL. (ejemplo: .../mario-merino)
   end

   # Función para cargar correctamente la selección de subproyectos implicados....
   nested_projects_list = render_subproject_nested_lists(allowed_projects|issue_projects) do |project|
     custom_fields_data = {}
     if allowed_projects.include?(project)
       custom_fields.each do |f|
         value = custom_values[project.id][f.id]
         value = value.join(",") if value.is_a?(Array)
         custom_fields_data.merge!(f.name.parameterize => value)
         value.split(",").each do |val|
           options_for_selects[f.name.parameterize] << val unless options_for_selects[f.name.parameterize].include?(val) || val.blank?
         end if value.present?
       end
     end
     content_tag('label',
                 check_box_tag(
                     'project_ids[]',
                     project.id,
                     @issue != nil && issue_projects.include?(project) && allowed_projects.include?(project),
                     disabled: allowed_projects.include?(project) ? false : true,
                     #:class => ("inactive" unless allowed_projects.include?(project)),
                     data: custom_fields_data
                 ) + ' ' + h(project.name), :class => ("inactive" unless allowed_projects.include?(project)), :style => ("display:none;" unless allowed_projects.include?(project))
     )
   end
%>

<h3 class="title"><%= l(:field_projects) %></h3>

<div class="actions_links">
  <%= l("Selection") %>:
  <!-- Botón de selección múltiple de proyectos del listado: -->
  <%= link_to l("select_all"), '#', id: "link_select_all", :onclick => "select_all(event)" %>
  |
  <!-- Botón de deselección múltiple de proyectos del listado (desmarcar todos los seleccionados): -->
  <%= link_to l("select_none"), '#', id: "link_select_all", :onclick => "select_none(event)" %>
  <!-- Selección individual de algunos de los proyectos de la caja de selección de proyectos: -->
  <hr>
  <% custom_fields.each do |field| %>
      |
      <%= select_tag field.name.parameterize, options_for_select(options_for_selects[field.name.parameterize]),
                     :prompt => field.name, :id => "select_#{field.name.parameterize}",
                     :class => "select_box_custom_field_value",
                     :onchange => "select_from_custom_field(event, '#{field.name.parameterize}')" %>
  <% end %>

</div>

<div class="users_container">
  <div class="columns" id="project_list">
    <!-- Listado de subproyectos a seleccionar: -->
    <%= nested_projects_list %>
  </div>
</div>
<!-- Botón para guardar los cambios de la selección de proyectos para propagar Issue: -->
<p class="buttons">
  <!-- Reflejar en el :onclick la creación de la issue con los proyectos ya asignados (como al hacer click en Crear y Crear y Continuar de la issue) -->
  <%= submit_tag l(:button_apply), :name => nil, :onclick => "updateSelectedProjects();hideModal(this);",
                 :type => 'button', :id => 'button_create' %>
</p>

<script type="text/javascript">

  $("input:checkbox[name='project_ids[]']").change(function() {
    if($("input:checkbox[name='project_ids[]']:checked").length == 1) {
      $("input:checkbox:not(:checked)").prop('disabled', true);
    } else {
      $("input:checkbox:not(:checked)").prop('disabled', false);
    }
  });

  // Función aplicada al seleccionar y/o actualizar algun miembro del listado de miembros/estudiantes:
  function updateSelectedProjects() {

    // Se obtienen todas las opciones de la seleccion de miembros, pasando el ID de los miembros:
    $("select#issue_project_id option").each(function() {
      this.selected = "";
    });

    // Para cada uno de los checkbox de subproyectos que es seleccionado, se obtiene el valor de sus respectivos IDs...:
    $("input:checkbox[name='project_ids[]']:checked").each(function() {
      $("#issue_project_id option[value=" + $(this).val() +"]").prop("selected", true);
    });
    // Cada subproyecto seleccionado, es mostrado en la vista de 'New issue' con el siguiente formato html:
    var htmlContent = [];
    $("input:checkbox[name='project_ids[]']:checked").each(function() {
      if($(this).val() != <%= @issue.project.id %>){
        htmlContent.push("<span class=\"list_projects_names\">" + $(this).closest('label').text() + "</span>" + "<br />");
      } else {
        htmlContent.push("<span class=\"list_projects_names\" style='display: none'>" + $(this).closest('label').text() + "</span>");
      }
    });

    $("#projects_form #list_of_projects_per_issue").html(htmlContent);

    if(htmlContent == "" || htmlContent.length == 1) {
      $("#propagate").css("display", "none");
      $('input[value="Create"]').prop('disabled', false);
      $('input[name="continue_issue"]').toggle(true);
      $('input[name="continue"]').toggle(false);
    } else if(htmlContent.length > 1) {
      $("#propagate").css("display", "inline");
      $('input[value="Create"]').prop('disabled', true);
      $('input[name="continue_issue"]').toggle(false);
      $('input[name="continue"]').toggle(true);
    }
  }

  // Función empleada al pinchar en selección múltiple de subproyectos (todos seleccionados):
  function select_all(event){
    event.preventDefault();

    $("input:checkbox[name='project_ids[]']").each(function()
    {
      $(this).attr("checked","checked");
    });
  }

  // Función empleada al pinchar en deselección múltiple de subproyectos (ninguno seleccionado):
  function select_none(event){
    event.preventDefault();

    $("input:checkbox[name='project_ids[]']:not(.inactive)").each(function()
    {
      $(this).attr("checked",false);
    });
  }

  // Función empleada al seleccionar algún miembro/alumno
  function select_from_custom_field(event, id) {
    event.preventDefault();
    select_none(event);

    var selectors, selector, val;
    val = $("#select_"+id).val();
    selectors = [ "='"+val+"'", "^='"+val+",'", "$=',"+val+"'", "*=',"+val+",'" ];
    selector = $.map(selectors, function(e) {
      return "input:checkbox[name='project_ids[]']:checkbox[data-"+id+e+"]"
    }).join(", ");
    $(selector).each(function() {
      $(this).attr("checked","checked") ;
    });

    $(".select_box_custom_field_value").prop('selectedIndex',0);

  }

</script>
